
# Seed for reproducibility of results. Must be set before initializing model components that depend on randomness.
seed: 1993
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Paths for saving outputs and logs from the model training process.
data_folder: ../data  # e.g., /path/to/data
output_folder: !ref ../results/train_with_wav2vec2/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# SSL (Self-Supervised Learning) Model Configuration
# We choose the base model of wav2vec2 which is not fine-tuned to demonstrate the generalizability and potential improvements.
sslmodel_hub: facebook/wav2vec2-base
sslmodel_folder: !ref <save_folder>/ssl_checkpoint

# Directories for storing processed data and annotations.
train_annotation: !ref <data_folder>/train_data.json
valid_annotation: !ref <data_folder>/valid_data.json
test_annotation: !ref <data_folder>/test_data.json
test_annotation_0_spk: !ref <data_folder>/test_files_no_spk_data.json
test_annotation_1_spk: !ref <data_folder>/test_files_1_spk_data.json
test_annotation_2_spk: !ref <data_folder>/test_files_2_spk_data.json
test_annotation_3_spk: !ref <data_folder>/test_files_3_spk_data.json
test_annotation_4_spk: !ref <data_folder>/test_files_4_spk_data.json


# Logger for recording training progress and statistics.
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>


####################### Training Parameters ####################################
number_of_epochs: 5
batch_size: 64
lr: 0.001 # Learning rate for the model optimizer.
lr_ssl: 0.0001 # Learning rate specific to the SSL model components.

# Control the freezing of model layers to fine-tune specific components.
freeze_ssl: False # Freeze all layers of the SSL model.
freeze_ssl_conv: True # Only freeze convolutional layers of the SSL model for potential performance improvement.

####################### Model Parameters #######################################
# Dimensions for the encoder and embeddings used within the x-vector architecture.
encoder_dim: 768
out_n_neurons: 5

# DataLoader configuration to specify how training data is batched and handled during training.
dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: True
    num_workers: 0  # Number of workers for data loading. Use 2 for Linux, 0 for Windows compatibility.
    drop_last: False

# Configuration for the SSL model loaded from Hugging Face's Transformers library.
ssl_model: !new:speechbrain.lobes.models.huggingface_transformers.wav2vec2.Wav2Vec2
    source: !ref <sslmodel_hub>
    output_norm: True
    freeze: !ref <freeze_ssl>
    freeze_feature_extractor: !ref <freeze_ssl_conv>
    save_path: !ref <sslmodel_folder>

# Statistical pooling layer to aggregate model outputs.
avg_pool: !new:speechbrain.nnet.pooling.StatisticsPooling
    return_std: False

output_mlp: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <encoder_dim>
    n_neurons: !ref <out_n_neurons>
    bias: False

# Epoch counter to manage the training cycles.
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

# Grouping of modules for training.
modules:
    ssl_model: !ref <ssl_model>
    output_mlp: !ref <output_mlp>

# Module list grouping for combined optimization.
model: !new:torch.nn.ModuleList
    - [!ref <output_mlp>]
    -
# Log softmax activation for output normalization.
log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

# Loss function for training.
compute_cost: !name:speechbrain.nnet.losses.nll_loss

# Metric statistics for evaluating model performance.
error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

# Optimizers for the main model and the SSL components.
opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

ssl_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_ssl>

# Learning rate schedulers for the main model and SSL model to improve training convergence.
lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.9
    patient: 0

lr_annealing_ssl: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_ssl>
    improvement_threshold: 0.0025
    annealing_factor: 0.9

# Checkpointing configuration to save and recover training states.
checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        ssl_model: !ref <ssl_model>
        lr_annealing_output: !ref <lr_annealing>
        lr_annealing_ssl: !ref <lr_annealing_ssl>
        counter: !ref <epoch_counter>


